# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index

##################### LOGIN ######################

GET     /login                              controllers.Application.login
POST    /login                              controllers.Application.authenticate
GET     /logout                             controllers.Application.logout

##################### BOOKS ######################

# Books list (look at the default values for pagination parameters)
GET     /books                      controllers.Books.list(p:Int ?= 0, s:Int ?= 2, f ?= "")

# Add Book
GET     /books/new                  controllers.Books.create
POST    /books                      controllers.Books.save

# Edit existing Book
GET     /books/:id/edit             controllers.Books.edit(id:Long)
POST    /books/:id                  controllers.Books.update(id:Long)

# Book details
GET     /books/:isbn/details          controllers.Books.details(isbn:String)

# Delete a book
POST    /books/:id/delete           controllers.Books.delete(id:Long)

##################### PHYSICAL BOOKS (COPIES) ######################
# Copy list (look at the default values for pagination parameters)
GET     /copies                      controllers.PhysicalBooks.list(p:Int ?= 0, s:Int ?= 2, f ?= "")

# Get a copy by id
GET     /copies/:id                 controllers.PhysicalBooks.findPhysicalBookWithBook(id:Long)

# Tag a copy
GET     /copies/:id/tag             controllers.PhysicalBooks.tag(id:Long)

# Delete a copy
GET     /copies/:id/delete          controllers.PhysicalBooks.delete(id:Long)

# Add Copy
GET     /copies/new/:idBook        controllers.PhysicalBooks.create(idBook:Long)
POST    /copies                    controllers.PhysicalBooks.save
##################### USERS ######################

# Users list (look at the default values for pagination parameters)
GET     /users                      controllers.Users.list(p:Int ?= 0, s:Int ?= 2)

# Add User
GET     /users/new                  controllers.Users.create
POST    /users                      controllers.Users.save

#Show user
GET     /users/show/:id             controllers.Users.findUserById(id:Long)

# Users details 
GET     /users/:id                  controllers.Users.details(id:Long)

# Edit existing User
GET     /users/:id/edit             controllers.Users.edit(id:Long)
POST    /users/:id                  controllers.Users.update(id:Long)

# Delete a user
POST    /users/:id/delete           controllers.Users.delete(id:Long)

# Tag user card
GET     /users/:id/tag              controllers.Users.tag(id:Long)

##################### LOANS ######################

# Loan list
GET     /loans                      controllers.Loans.list(p:Int ?= 0, s:Int ?= 2, f ?= "")

# New Loan
GET     /loans/new                  controllers.Loans.newLoan(ownerId:Option[Long],bookId:Option[Long])

# Return Book
GET     /loans/return               controllers.Loans.returnLoan(bookId:Option[Long])

# Select user
GET     /loans/new/selectuser       controllers.Loans.selectUser(ownerId:Option[Long],bookId:Option[Long],p:Int ?= 0, s:Int ?= 2, f ?= "")

# Select book
GET     /loans/new/selectbook       controllers.Loans.selectBook(ownerId:Option[Long] ?= None,bookId:Option[Long] ?= None,action:String,p:Int ?= 0, s:Int ?= 2, f ?= "")

# Select book via RFID
GET     /loans/selectbookRFID       controllers.Loans.selectBookRFID(ownerId:Option[Long],bookId:Option[Long],action:String)

# Select user via RFID
GET     /loans/selectuserRFID       controllers.Loans.selectUserRFID(ownerId:Option[Long],bookId:Option[Long])

# Get a loan by physicalbook id
GET     /loans/book/:id             controllers.Loans.findActiveLoanByPhysicalBookId(id:Long)

# Save Loan
POST    /loans                      controllers.Loans.save

# Return Book
POST    /loans/close                controllers.Loans.close


# Javascript routing
GET     /assets/javascripts/routes  controllers.Application.javascriptRoutes

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
